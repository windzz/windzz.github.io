[{"title":"使用hexo和githubs pages搭建个人博客","date":"2017-03-31T02:35:09.000Z","path":"2017/03/31/blog-website-by-hexo-and-github-pages/","text":"引子 Why hexo ? 区别 Jekyll Hexo 主题推荐 搭建流程 Github Repo 安装Hexo 安装过程中的问题 DTrace 错误 （Mac OS X） 初始化博客 站点配置 主题设置 安装主题 设定主题 更新主题 主题参数 本地服务器 开篇宣言 新建博客 Front-matter markdown 预览博客效果 部署 安装Git部署插件 插件配置 部署发布 生成静态文件 推送Git 简化命令 缓存清楚 插件 hexo-generator-json-content hexo-filter-github-emojis hexo-filter-flowchart hexo-filter-sequence 写在最后 定制化 关于评论 引子 人们总是在不知不觉中悄然的成长和老去, 有喜有悲。或多或少你都存在一些人生的感悟, 生活的、工作的、感情的感悟。照相机的存在是因为人们想保留住喜或悲的那一刹, 博客的存在帮助人们记录下感悟的瞬间并分享给更多的人。 予人玫瑰,手留余香。 Why hexo ? 这里主要拿Hexo跟jekyll做一下对比, 两者都是可以将博客托管在github上的, 并且都是很好的博客引擎, 这里主要说一下个人选择时的考虑。 区别Jekyll 1. jekyll采用的是ruby语言支持的, ruby在windows环境下容易出乱子。(mac用户的我没有这个体会) 2. jekyll是将blog的整体托管在github上, 这本没有什么的。但玩博客的朋友都会挑选一个主题使博客更加美观。往往这些主题为了满足大多数人的喜好会做的比较厚重。在首次下载主题 &amp; 托管github时耗时严重, 强迫症 卒。 3. jekyll的主题总得来说相对hexo颜值稍逊色, 纯个人观点, 不喜欢憋着。 Hexo 1. hexo采用的是node.js, 在跨平台上相较于ruby更有优势 2. hexo在本地写作, 简单命令快速的生成静态文件(纯html css js), 配置后同时推送到github。区别与jekyll的整站托管更加轻巧灵活。当然有的瓜皮要说hexo只托管了静态文件, 一但本地博客文件夹丢失、误删或者其他无法恢复的厄运面前, 你一定会为丢了博客石乐志(失了智)。我个人将md文件单独托管github, 也是一种办法, 哇 这就很开心。 3. hexo的主题与插件相对来说更加美观和方便使用。这一点可以看看hexo官网。 主题推荐 1. yilia 本站采用 2. next这是采用非常广的主题, 其他好看的也有很多, 萝卜青菜, 你爱的我不一定爱。 搭建流程Github Repo 无论我们使用什么引擎我们最终是要将博客托管在github上的。 1. 注册帐号Sign Up or Sign In 2. 创建repo - 注意: 仓库名称 = username.github.io。username即你的账户名称, 否则无法正常运作。了解更多 安装Hexo Hexo的文档非常完善, 你可以找到你想要的一切! 这里安装步骤就不再赘述了, 最好安装步骤就是官方文档。请点击下方传送门↓↓ Hexo中文文档传送门&gt;&gt;&gt; 安装过程中的问题DTrace 错误 （Mac OS X）123&#123; [Error: Cannot find module &apos;./build/Release/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;&#123; [Error: Cannot find module &apos;./build/default/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125;&#123; [Error: Cannot find module &apos;./build/Debug/DTraceProviderBindings&apos;] code: &apos;MODULE_NOT_FOUND&apos; &#125; DTrace 安装可能有错误 , 使用下列命令:1$ npm install hexo --no-optional 然鹅儿, 我尝试了这个命令却没有任何效果, 报错依然。 但是并不妨碍继续使用hexo。如果你还遇到了其他的问题或者错误信息, 可以尝试在这里找到解决方案常见问题 初始化博客1hexo init &lt;folder name&gt; 简单的命令为你生成本地博客, folder name为存放博客文件的文件夹名称, 如果folder name缺省, 则在当前目录创建。12345678.├── _config.yml //全局配置文件├── package.json //博客程序信息, 默认组件信息├── scaffolds //模板文件夹├── source //资源文件夹| ├── _drafts //草稿文件夹| └── _posts //文章文件夹└── themes //主题文件夹 可以存放多个主题, 具体使用哪个自行配置 更多的文件描述信息请参考文档Hexo初始文件释义 站点配置博客根目录的 _config.yml 文件为网站全局配置文件, 下面简单介绍几个配置: 配置项 配置释义 备注 title 网站标题 subtitle 网站副标题 description 网站描述 用于SEO timezone 网站时区。Hexo 默认使用您电脑的时区。Asia/Shanghai 不墨迹, 需要更多?时区 theme 主题名称, 可以选择自己喜欢的主题进行配置, 本站使用yilia 全站的配置项非常多, 更多更详细的请参考Hexo站点配置 主题设置只在主 _config.yml 文件中填写了theme后, 并不能让博客拥有炫酷的主题, 还有一项重要的工作: 安装主题 安装主题1$ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 在根目录执行上述命令, 主题文件会存储到 themes文件夹下。 设定主题修改根目录 _config.yml : theme: yilia 更新主题12cd themes/yiliagit pull 主题参数在主题文件夹下也有一个_config.yml 用于主题的各项配置, 具体怎么配置就因主题而异了, 请参考选择主题的文档进行配置。 本地服务器经过一系列配置, 我们不知道是对是错, 实践是检验真理的唯一标准!Hexo本地跑起来的根本是内置了简易的服务器, Hexo3.0将本地服务器单独抽离成一个插件, 不过在初始化的时候, server插件是默认安装的。1hexo server --debug --debug 开启debug模式, 会在终端输出服务信息。1207:23:59.258 INFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop.07:23:59.269 DEBUG Database saved 当看到这个信息时, 说明博客本地服务启动成功, 在浏览器输入http://localhost:4000进行访问。本地服务 端口 、 ip 都是可定制化的, 更多可以参考Hexo服务器说明 开篇宣言新建博客博客成功跑起来, 我们可以写篇博客来表达一下搭建感言 or hello world?1hexo new &apos;blog name&apos; 成功执行以上命令, 会在/source/_posts/文件夹中创建以blog name命名的.md文件。这就是我们的博客文件。 Front-matterFront-matter 是文件最上方以 --- 分隔的区域，用于指定个别文件的变量, 如下所示:1234---title: Hello Worlddate: 2017-02-01 10:35:09--- 博客设置自己的分类和标签:12345categories:- hushuobadaotags:- Hexo- Jeklly 多个标签就如上述样例设置, 但是categories不支持多个同级, 按tag模板设置categories得到的是父子分类。更多预定义属性可参考Front-matter预定义属性解析 markdown剩下的事情就是属于各位的的天马行空了。markdown基础语法可参考markdown syntax 预览博客效果在本地服务器服务生效的情况下, 直接刷新页面就可以看到你的博客咯。如果本地服务没有启动, 执行hexo server --debug 再查看即可。 部署关于博客的部署, 就到了我们使用Hexo与Github Pages搭建博客的最后一步了。Hexo支持的部署方式有很多种: Git、Rsync等这里我们直接介绍Git, 不要问我为什么。更多的部署方式请参考Hexo部署 安装Git部署插件hexo-deployer-git是Hexo通过git部署的插件。1$ npm install hexo-deployer-git --save 插件配置在站点配置文件_config.yml中添加一下配置信息:123456789deploy: type: git repo: &lt;repository url&gt; branch: [branch] message: [message] name: [git user] email: [git email] extend_dirs: [extend directory] ignore_hidden: false # default is true SSH登录方式可以更简化:1234deploy: type: git repo: git@github.com:windzz/windzz.github.io.git branch: master 部署发布生成静态文件开头介绍了Hexo与Github Pages搭建博客是通过Hexo生成博客静态文件, 然后托管在Github上的。使用Hexo生成静态文件十分快速简单。1$ hexo generate 执行成功会在根目录下生成public文件夹, 里面的内容就是我们托管在Github上的博客静态文件。 推送Git在配置文件中将Git的信息配置好后, 执行命令:1$ hexo deploy 简化命令我们可以将生成静态文件跟推送git的命令简化合并1$ hexo g -d g = generate, d = deploy 缓存清楚部署时为了避免缓存带来的问题, 在执行生成和发布博客静态文件之前执行一下命令清除缓存:1$ hexo clean 此命令会将public文件夹删除, 在通过1$ hexo g -d 将最新的文件发布, 让世界感受到你的爱~ 插件这里列举几个常用、有趣、对开发这更有意义的插件 hexo-generator-json-contenthexo-generator-json-content这个插件将每篇博客的基础信息解析成json格式的数据,提供给其他组件使用, 比如站内搜索。 hexo-filter-github-emojishexo-filter-github-emojis 可以支持emojis表情 hexo-filter-flowcharthexo-filter-flowchart 支持画流程图 hexo-filter-sequencehexo-filter-sequence 支持UML图 写在最后定制化至此我们就可以开开心心的坚持写我们的博客了, 当然如果你对博客有什么新奇的想法是可以自己定制的。聪明的你在这一系列教程的熏陶下一定发现了如何定制化。 关于评论每个主题基本上都集成了天朝的 多说, 但是很遗憾的告诉大家多说关闭的消息。虽然可以我们仍可以集成其他的评论系统,但是还是有那么一丢丢忧伤。我也因此还没有在这个主题的基础上集成其他评论组件。","tags":[{"name":"markdown","slug":"markdown","permalink":"http://windzz.github.io/tags/markdown/"},{"name":"hexo","slug":"hexo","permalink":"http://windzz.github.io/tags/hexo/"},{"name":"github pages","slug":"github-pages","permalink":"http://windzz.github.io/tags/github-pages/"},{"name":"jekyll","slug":"jekyll","permalink":"http://windzz.github.io/tags/jekyll/"}]},{"title":"学习markdown语法","date":"2017-03-30T08:07:37.000Z","path":"2017/03/30/learn-markdown-syntax/","text":"Markdown是一种轻量级的写作语法, 简洁、高效的语法可以让写作的文章错落有致、简单大方。在此我们特别感谢Markdown的创始人约翰·格鲁伯提供的使写作爱好者事半功倍的工具。 这篇文章来记录如何从0基础学习Markdown语法 - 几分钟的时间。 标题# + 空格 + 标题名称 一级标题 ## + 空格 + 标题名称 二级标题 … ###### + 空格 + 标题名称 六级标题 段落 &amp; 换行段落就是一行或多行的语句组成的文字片段,段落与段落的区分是之间存在空行。空行就是空白的一行。&lt;br/&gt;也可以换行,顺便提一句markdown兼容html, 即html标签可以穿插在markdown的写作中。 示例:我是第一个段落儿子中考考试考差了，被老婆骂了一顿。我去安慰儿子：“你要努力学习，以后一定要超越爸爸。”儿子愣了一下，弱弱来了一句：“别的我不敢保证。但是，以后找个比你好的老婆还是很有把握的。”‍‍‍‍ 我是第二个段落甲：“手机斗地主一直输，是什么原因让你坚持下去的？”乙：“因为队友一直鼓励我。”甲：“怎么鼓励的？”乙：“你的牌打的也忒好了！”甲：“……”‍‍ 斜体 &amp; 粗体使用*和**表示斜体和粗体。 示例:这是 斜体, 这是 粗体 外链[外链描述](外链地址) 外部链接 示例:风竹 - windzz的时光机 图片![图片描述](图片地址) 插入图片 示例: 列表无序列表+ - *(任意一个 or 任意组合 你开心就好) + 空格 + 列表描述 表示无序列表 示例: 无序列表 2 无序列表 1 无序列表 3 有序列表数字. + 空格 + 列表描述 表示有序列表 示例: 有序1 有序2 有序3 由于博客主题CSS的问题,有序列表的展示有点小问题, 但是语法没有问题。 行内代码块 在本片博客中,有很多使用 `代码块文字` 标识行内代码块 示例:让我们来聊聊markdown 删除线~~删除线覆盖的文字~~ 示例:坐地铁，旁边坐着一年轻漂亮妈妈抱着一三岁的小正太。过了一会，可能饿了，一直缠着要吃奶。妈妈说：“这么大了还吃奶？”孩子一边喊一边扒妈妈的领口，妈妈拿手挡住胸口，小正太折腾了半天没办法。突然冲着我喊：“叔叔帮我扒下，我们一人一个。”你们说我该不该帮他一下呢! 代码高亮块```语言代码块```进行代码高亮 示例:12&lt;?phpecho 'PHP是世界上最好的语言'; 引用正常引用> + 引用话术 表示引用 引用需要以一个空白行结束 示例 森屿暖树 墒以光年 嵌套引用> > > 引用可以嵌套使用，嵌套结束后需要已单独空一行表示嵌套结束 示例 这里是嵌套引用 我是外围引用","tags":[{"name":"markdown","slug":"markdown","permalink":"http://windzz.github.io/tags/markdown/"}]},{"title":"my new post","date":"2017-03-23T09:09:30.000Z","path":"2017/03/23/my-new-post/","text":"hi every one. This is my first post. #say hellohello baby!12&lt;?php echo 'hello world';","tags":[{"name":"hello","slug":"hello","permalink":"http://windzz.github.io/tags/hello/"},{"name":"post","slug":"post","permalink":"http://windzz.github.io/tags/post/"},{"name":"new","slug":"new","permalink":"http://windzz.github.io/tags/new/"}]},{"title":"Hello World","date":"2017-02-01T02:35:09.000Z","path":"2017/02/01/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","tags":[]}]